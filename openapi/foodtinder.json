{
  "openapi": "3.0.0",
  "info": {
    "version": "0.0.1",
    "title": "OpenAPI schema for Food-Tinder"
  },
  "paths": {
    "/login": {
      "post": {
        "summary": "Log in using username and password",
        "operationId": "login",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string",
              "format": "password"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Logged in successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/4XX"
          }
        }
      }
    },
    "/register": {
      "post": {
        "summary": "Register using username and password",
        "operationId": "register",
        "parameters": [
          {
            "name": "username",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "password",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string",
              "format": "password"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "Registered successfully",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Session"
                }
              }
            }
          },
          "400": {
            "$ref": "#/components/responses/4XX"
          }
        }
      }
    },
    "/users/self": {
      "x-go-middlewares": [
        "mustAuthorize"
      ],
      "get": {
        "summary": "Get the current user",
        "operation": "getSelf",
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Self"
                }
              }
            },
            "400": {
              "$ref": "#/components/responses/4XX"
            }
          }
        }
      }
    },
    "/users/{id}": {
      "x-go-middlewares": [
        "mustAuthorize"
      ],
      "get": {
        "summary": "Get a user by their ID",
        "operation": "getUser",
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "description": "The ID of the user",
            "required": true,
            "schema": {
              "$ref": "#/components/schemas/ID"
            }
          },
          {
            "name": "password",
            "in": "query",
            "required": true,
            "style": "form",
            "schema": {
              "type": "string",
              "format": "password"
            }
          }
        ],
        "responses": {
          "200": {
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/User"
                }
              }
            },
            "4XX": {
              "$ref": "#/components/responses/4XX"
            }
          }
        }
      }
    }
  },
  "components": {
    "responses": {
      "4XX": {
        "description": "User error",
        "content": {
          "application/json": {
            "schema": {
              "$ref": "#/components/schemas/Error"
            }
          }
        }
      }
    },
    "schemas": {
      "Error": {
        "description": "Error object returned on any error",
        "example": "server blew up",
        "required": [
          "message"
        ],
        "properties": {
          "message": {
            "type": "string"
          }
        }
      },
      "ID": {
        "description": "Snowflake ID",
        "example": "953809515621527562",
        "type": "string",
        "x-go-type": "int64"
      },
      "LoginMetadata": {
        "description": "Optional metadata included on login",
        "properties": {
          "user_agent": {
            "description": "The User-Agent used for logging in",
            "example": "curl/7.64.1",
            "type": "string"
          }
        }
      },
      "Session": {
        "required": [
          "user_id",
          "token",
          "expiry"
        ],
        "properties": {
          "user_id": {
            "$ref": "#/components/schemas/ID"
          },
          "token": {
            "type": "string",
            "example": "WlvPXdNuyfttl8eSV67hkbsX51wLURzT"
          },
          "expiry": {
            "type": "string",
            "format": "date-time"
          },
          "metadata": {
            "$ref": "#/components/schemas/LoginMetadata"
          }
        }
      },
      "Self": {
        "allOf": [
          {
            "$ref": "#/components/schemas/User"
          },
          {
            "required": [
              "birthday"
            ],
            "properties": {
              "birthday": {
                "type": "string",
                "format": "date"
              }
            }
          }
        ]
      },
      "User": {
        "required": [
          "id",
          "name",
          "avatar"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/ID"
          },
          "name": {
            "type": "string",
            "example": "food-tinder-user"
          },
          "avatar": {
            "type": "string",
            "example": "ypeBEsobvcr6wjGzmiPcTaeG7_gUfE5yuYB3ha_uSLs="
          },
          "bio": {
            "type": "string",
            "example": "Hello, world."
          }
        }
      },
      "FoodPreferences": {
        "required": [
          "likes",
          "prefers"
        ],
        "properties": {
          "likes": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Rice",
              "Fish"
            ]
          },
          "prefers": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              },
              "example": {
                "Rice": [
                  "Sushi Rice"
                ],
                "Fish": [
                  "Ahi Tuna",
                  "Salmon"
                ]
              }
            }
          }
        }
      },
      "UserLikedPosts": {
        "required": [
          "posts",
          "remaining",
          "expires"
        ],
        "properties": {
          "posts": {
            "type": "object",
            "additionalProperties": {
              "type": "string",
              "format": "date-time"
            },
            "description": "Posts maps post IDs to the time that the user liked.",
            "example": {
              "953809515621527562": "2018-08-24T14:15:22Z",
              "953809438236627014": "2018-08-24T14:15:48Z"
            }
          },
          "remaining": {
            "type": "number",
            "description": "Remaining is the number of likes allowed by the user until the Expires timestamp.",
            "example": 3
          },
          "expires": {
            "type": "string",
            "format": "date-time",
            "description": "Expires is the time that the rate limiter (the Remaining field) replenishes."
          }
        }
      },
      "Post": {
        "required": [
          "id",
          "user_id",
          "images",
          "description",
          "tags"
        ],
        "properties": {
          "id": {
            "$ref": "#/components/schemas/ID"
          },
          "user_id": {
            "$ref": "#/components/schemas/ID"
          },
          "cover_hash": {
            "type": "string",
            "example": "LEHV6nWB2yk8pyoJadR*.7kCMdnj"
          },
          "images": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "ypeBEsobvcr6wjGzmiPcTaeG7_gUfE5yuYB3ha_uSLs="
            ]
          },
          "description": {
            "type": "string",
            "example": "Salmon roll for $8.\n\nPretty cheap for me."
          },
          "tags": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "example": [
              "Salmon",
              "Sushi Rice"
            ]
          },
          "location": {
            "type": "string",
            "description": "Location is the location where the post was made."
          }
        }
      }
    }
  }
}
